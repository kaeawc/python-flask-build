[tox]
envlist = py39, py310, py311
skipsdist = True  # Skips creating a source distribution

[testenv]
usedevelop = True  # Reuses the current development environment
install_command = uv pip install --no-deps
allowlist_externals=**/.local/bin/uv
commands_pre =
    python -c "import os; os.makedirs('reports/coverage', exist_ok=True); os.makedirs('reports/junit', exist_ok=True); os.makedirs('reports/bandit', exist_ok=True);"
deps =
    mock
    unittest2
    future
    nose2
    PyYaml
    flask
    werkzeug
    markupsafe
    click
    blinker
    jinja2
    itsdangerous
commands =
    nose2

[testenv:lint]
description = Run code linting with ruff
commands =
    uv run ruff check

[testenv:format]
description = Auto-format code with black
commands =
    uv run ruff format

[testenv:typecheck]
description = Auto-format code with mypy
deps =
    mock
    unittest2
    future
    mypy
    typing_extensions
    mypy_extensions
    tomli
    types-PyYAML
commands =
    MYPYPATH=/Users/jason/kaeawc/python-flask-build/src mypy .


[testenv:coverage]
description = Run tests and check test coverage
deps =
    mock
    unittest2
    future
    nose2
    coverage
    PyYaml
    flask
    werkzeug
    markupsafe
    click
    blinker
    jinja2
    itsdangerous
commands =
    coverage run --source=src -m nose2
    coverage report
    coverage html

[testenv:bandit]
description = Run tests and check test coverage
deps =
    mock
    unittest2
    future
    nose2
    bandit
    PyYaml
    stevedore
    rich
    typing_extensions
commands =
    bandit -c bandit.yml -r -f xml -o reports/bandit/report.xml src/

[testenv:monkeytype]
deps =
    mock
    unittest2
    future
    nose2
    mypy
    monkeytype
    mypy_extensions
    libcst
    typing_extensions
commands =
    monkeytype run -m nose2
    monkeytype apply src
    mypy src